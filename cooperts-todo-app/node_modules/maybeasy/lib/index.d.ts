import Just, { just } from './Just';
import Maybe from './Maybe';
import Nothing, { nothing } from './Nothing';
declare type Nullable = null | undefined;
declare type Emptyable = {
    length: number;
};
declare const fromNullable: <T>(v: Nullable | T) => Maybe<T>;
declare const fromEmpty: <T extends Emptyable>(xs: T) => Maybe<T>;
declare const isJust: (maybe: Maybe<any>) => boolean;
declare const isNothing: (maybe: Maybe<any>) => boolean;
export { Maybe, Just, just, Nothing, nothing, Nullable, Emptyable, fromNullable, fromEmpty, isJust, isNothing };
